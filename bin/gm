#!/usr/bin/env bash

set -eEuo pipefail
shopt -s nullglob

# A "git merge" wrapper that uses a standard commit message and
# prevents merging locally if the local branch and the local
# origin/ tracking branch differ.

ARGS=()
if [[ $# -eq 0 ]]; then
    BRANCH=`git branch --all | perl -pe 's/^\\h+//; s/\\h+$//;' | fzf`
    ARGS+=($BRANCH)
else
    USE_LOCAL=
    while [ $# -gt 0 ]; do
        case "$1" in
            --local)
                USE_LOCAL=1;
                ;;

            -*)
                ARGS+=("$1")
                ;;

            origin/*)
                BRANCH="$1"
                ARGS+=($BRANCH)
                shift
                break 2
                ;;

            *)
                BRANCH="$1"
                shift

                BRANCHES=`git for-each-ref "refs/heads/$BRANCH" "refs/remotes/*/$BRANCH" | perl -lane '$h{$F[0]}++; END { print for sort keys %h; }'`
                BRANCHES=( $BRANCHES )
                if [[ ${#BRANCHES[@]} > 1 && ! $USE_LOCAL ]]; then
                    echo "error: $BRANCH and origin/$BRANCH have different commits" 1>&2
                    echo
                    gbl --no-fetch $BRANCH
                    exit 1
                fi

                ARGS+=($BRANCH)
                break 2;
        esac
        shift;
    done

    while [ $# -gt 0 ]; do
        ARGS+=($1)
        shift;
    done

fi

BRANCH_NAME=${BRANCH##*/}

fetch
git merge --no-commit -m "(merge $BRANCH_NAME -> `git branch --show-current`)" "${ARGS[@]}"
